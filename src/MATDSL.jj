/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */
options
{
  static = true;
}

// édesta ???

PARSER_BEGIN(MATDSL)

import java.util.HashMap;

public class MATDSL
{
  public static void main(String args []) throws ParseException
  {
    MATDSL parser = new MATDSL(System.in);
    while (true)
    {
      System.out.println("Reading from standard input...");
      System.out.print("Enter an expression like \"1+(2+3)*4;\" :");
      /*try
      {
        switch (MATDSL.one_line())
        {
          case 0 : 
          System.out.println("OK.");
          break;
          case 1 : 
          System.out.println("Goodbye.");
          break;
          default : 
          break;
        }
      }
      catch (Exception e)
      {
        System.out.println("NOK.");
        System.out.println(e.getMessage());
        MATDSL.ReInit(System.in);
      }
      catch (Error e)
      {
        System.out.println("Oops.");
        System.out.println(e.getMessage());
        break;
      }*/
      return;
    }
  }
}

PARSER_END(MATDSL)

SKIP :
{
  " "
| "\r"
| "\t"
}

TOKEN : /* OPERATORS */
{
  < PLUS : "+" >
| < MINUS : "-" >
| < MULTIPLY : "*" >
| < DIVIDE : "/" >
| < TRANSPOSE: "'" >
| < INVERSE: "-1" >
| < ADJOINT: "$" >
 
}

TOKEN :
{
  < INTEGER : ([ "0"-"9" ])+ >	
| < LF : "\n" >
| < DOT: "." >
| < SEMICOLON : ";" >
| < COLON : ":" >
| < OPEN_CBRACKET : "(" >
| < CLOSE_CBRACKET : ")" >
| < OPEN_SBRACKET : "[" >
| < CLOSE_SBRACKET : "]" >
| < REAL : (< INTEGER >)+ (< DOT >) (<INTEGER >)* >
| < SYMBOL : [ "A"-"Z", "a"-"z" ]([ "0"-"9", "A"-"Z", "a"-"z" ])* >

}

/*int one_line() :
{}
{	
  sum() ";"
  {
    return 0;
  }
| ";"
  {
    return 1;
  }
}

void sum() :
{}
{
  term()
  (
    (
      < PLUS >
    | < MINUS >
    )
    term()
  )*
}

void term() :
{}
{
  unary()
  (
    (
      < MULTIPLY >
    | < DIVIDE >
    )
    unary()
  )*
}

void unary() :
{}
{
  < MINUS > element()
| element()
}

void element() :
{}
{
  < CONSTANT >
| "(" sum() ")"
}*/
